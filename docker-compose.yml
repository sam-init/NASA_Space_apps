version: '3.8'

services:
  # NASA Exoplanet API Backend
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nasa-exoplanet-api
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nasa-network

  # React Frontend (for local development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nasa-exoplanet-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_ENV=production
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - nasa-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: nasa-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - nasa-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: nasa-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    networks:
      - nasa-network

volumes:
  redis_data:

networks:
  nasa-network:
    driver: bridge
